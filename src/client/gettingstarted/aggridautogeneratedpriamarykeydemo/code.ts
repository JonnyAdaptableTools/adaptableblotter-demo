import '@adaptabletools/adaptable/index.css';
import '@adaptabletools/adaptable/themes/dark.css';
import '@ag-grid-community/all-modules/dist/styles/ag-grid.css';
import '@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css';
import '@ag-grid-community/all-modules/dist/styles/ag-theme-alpine.css';
import '@ag-grid-community/all-modules/dist/styles/ag-theme-balham-dark.css';
import '@ag-grid-community/all-modules/dist/styles/ag-theme-alpine-dark.css';
import Adaptable from '@adaptabletools/adaptable/agGrid';
import {
  AdaptableOptions,
  PredefinedConfig,
  AdaptableApi,
} from '@adaptabletools/adaptable/types';
import { GridOptions, ColDef, RowNode } from '@ag-grid-community/all-modules';
import { AllEnterpriseModules } from '@ag-grid-enterprise/all-modules';

const demoConfig: PredefinedConfig = {
  Dashboard: {
    Tabs: [
      {
        Name: 'Demo Toolbar',
        Toolbars: ['Layout', 'BulkUpdate', 'Custom'],
      },
    ],
  },
} as PredefinedConfig;

const columnSchema: ColDef[] = [
  {
    headerName: 'Make',
    field: 'make',
    filter: true,
    editable: true,
    type: 'abColDefString',
  },
  {
    headerName: 'Model',
    field: 'model',
    filter: true,
    editable: true,
    type: 'abColDefString',
  },
  {
    headerName: 'Price',
    field: 'price',
    filter: true,
    editable: true,
    type: 'abColDefNumber',
  },
];

// Set up row data as normal - but DON'T pass it to Grid Options
const rowdata: any[] = [
  {
    make: 'Toyota',
    model: 'Celica',
    price: 35000,
  },
  { make: 'Toyota', model: 'Yaris', price: 40000 },
  { make: 'Toyota', model: 'Corolla', price: 28000 },
  { make: 'Ford', model: 'Mondeo', price: 32000 },
  { make: 'Ford', model: 'Fiesta', price: 35000 },
  { make: 'Ford', model: 'Focus', price: 26750 },
  { make: 'Ford', model: 'Galaxy', price: 41000 },
  { make: 'Porsche', model: 'Boxter', price: 72500 },
  { make: 'Porsche', model: 'Mission', price: 81000 },
  { make: 'Mitsubbishi', model: 'Outlander', price: 97800 },
];

// Create ag-Grid GridOptions object - but without setting row data
export default async () => {
  const gridOptions: GridOptions = {
    columnDefs: columnSchema,
    enableRangeSelection: true,
    sideBar: true,
    suppressAggFuncInHeader: true,
    suppressMenuHide: true,
  };

  // In Adaptable Options set `autogeneratePrimaryKey` to true
  const adaptableOptions: AdaptableOptions = {
    primaryKey: '',
    userName: 'Demo User',
    adaptableId: 'AutoGenerated Primary Key Demo',
    autogeneratePrimaryKey: true,
    dashboardOptions: {
      customToolbars: [
        {
          name: 'Custom',
          title: 'Custom',
          toolbarButtons: [
            {
              label: 'Edit First Row Price',
              onClick: () => {
                // get first row
                let firstRow: any = rowdata[0];

                // change price value in first row
                firstRow['price'] = Math.floor(Math.random() * 100000) + 1;

                // update Adaptable using Grid Api
                adaptableApi.gridApi.updateGridData([firstRow]);
              },
            },
            {
              label: 'Delete Last Row',
              onClick: () => {
                // get last row
                let lastRow: any = rowdata[rowdata.length - 1];

                // delete row using Grid Api
                if (lastRow) {
                  adaptableApi.gridApi.deleteGridData([lastRow]);
                }
              },
            },
          ],
        },
      ],
    },
    predefinedConfig: demoConfig,
    vendorGrid: { ...gridOptions, modules: AllEnterpriseModules },
  };

  const adaptableApi: AdaptableApi = await Adaptable.init(adaptableOptions);

  // Because we are using an autogenerated Primary Key set row data via Grid Api
  adaptableApi.eventApi.on('AdaptableReady', () => {
    adaptableApi.gridApi.setGridData(rowdata);
  });
};
